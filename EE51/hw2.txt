Nadine DabbyEE 51January 30, 2008Homework 2 (2.5 days late)1. 

Dec2StringDescription:  	The function is passed a 16-bit signed value (n) that it 
		will convert to decimal (at most 5 digits plus sign) and 
		store as a string starting at the memory location indicated 
		by the passed address (a). 
 
Arguments:        AX - decimal value to convert to string.
		  SI - address at which to store string
Return Values:    CF - set to 1 if passed value > 9999 (decimal),
                       0 otherwise.                  Local Variables:  arga (SI)  - copy of address.                  argn (AX)  - decimal digit.
		  index (BX) - stores index into address.
		  number (DX) - stores number being computed.
                  digit (AX)  - computed decimal digit.
                  error (CF)  - error flag.
                  pwr10 (CX)  - current power of 10 being computed.


Error
Handling:	If number is over 5 digits, error flag will be set
		Algorithms: 	TwosComplement

Data 
Structures:	number will be placed in address specified by DS:SI

Known Bugs: 	none

Limitations:	Will not compute a number > 99999
Pseudo Code
  
  index = 0
  
  IF (1st bit of argn = 1)
	  DS:SI[index] = '000101101'              ; negative sign
	  number = TwosComplement(argn);
	  index = index + 8
	
  ELSE    DS:SI[index] = '000101011' 		;positive sign
	  number = argn;
          index = index + 8
  ENDIF

  pwr10 = 10000  error = FALSE  WHILE ((error = FALSE) AND (pwr10 > 0))      digit = number/pwr10
      IF (digit = 0) THEN
	  DS:SI[index] = '000100000'                  ;space
	  index = index + 8
 	  pwr10 = pwr10/10          error = FALSE
      ELSE IF (digit < 10) THEN          DS:SI[index] = 'digit + 000110000'          ; digit + 60          index = index + 8
          number = number MODULO pwr10          pwr10 = pwr10/10          error = FALSE      ELSE          error = TRUE
	  DS:SI[index] = '000000000'      ENDIF  ENDWHILE  RETURN  error




TwosComplement

Description: 	The function is passed a 16-bit value (n) that it 
		will convert to the twos complement bit value which it 
		will return. 
 
Arguments:        n - binary number to convert.
		 Return Values:    number - twos complement bit string.                  Local Variables:  number  - binary string.

Function TwosComplement(n)
	number = Not(n)
	number = number + 1
	return number 
End Function


-------------------------------------------------------------------------

Hex2stringDescription:	The function is passed a 16-bit unsigned value (n) that it 
		will convert to hexadecimal (at most 4 digits) and store as 
		a string starting at the memory location indicated by the 
		passed address (a).   	

Arguments:        AX - hexadecimal value to convert to string.
		  SI - address at which to store string
Return Values:    CF - set to 1 if passed value > 9999 (decimal),
                       0 otherwise.                  Local Variables:  arga (SI)  - copy of address.                  argn (AX)  - binary unsigned digit.
		  index (BX) - stores index into address.
                  digit (AX)  - computed hexadecimal character.
                  pwr16 (CX)  - current power of 16 being computed.
		  error (CF)  - error flag.



Error
Handling:	none
		Algorithms: 	none

Data 
Structures:	number will be placed in address specified by DS:SI

Known Bugs: 	none

Limitations:	none
Pseudo Code
  
  index = 0
  number = argn
  pwr16 = 32768  error = FALSE  WHILE ((error = FALSE) AND (pwr16 > 0))      digit = number/pwr16
      IF (digit < 10) THEN          DS:SI[index] = 'digit + 000110000'          ; digit + 60          index = index + 8
          number = number MODULO pwr16          pwr16 = pwr16/16          error = FALSE      ELSE IF (digit < 16) THEN
	  digit = digit - 9          DS:SI[index] = 'digit + 001000000'          ; digit - 9 + 64          index = index + 8
          number = number MODULO pwr16          pwr16 = pwr16/16          error = FALSE
      ELSE          error = TRUE
	  DS:SI[index] = '000000000'
      ENDIF  ENDWHILE  RETURN  error


